<div class="safe-update-root">
    <?php if ($this->returnurl) { ?>
    <div class="compare_progress" data-returnurl="<?php echo $this->returnurl?>">
        <img src="<?php echo juri::root() . '/administrator/components/com_safe_update/assets/images/progress.gif'?>" alt="">
        <h2>Пожалуйста подождите. Идет сравнение файлов ...</h2>
    </div>
    <?php } ?>
    <div class="alert alert-block">
        <h3>Приветствую.</h3> Меня зовут <strong>Joomla Safe Update</strong>. Я делаю грязную работу за программистов, которым по тем или иным причинам потребовалось изменить системные файлы Joomla.
    </div>
    
    Причин может быть много, самая распространенная - незнание. Незнание того, что в Joomla есть механизм оверайда.
    <p>Но, причны могут быть и уважительные. К примеру заказчику хочется, чтобы теги выводились исключительно по алфавиту, а если есть одинаковые то по количеству материалов в них. В Joomla такой настройки нет.</p>
    <p>Что делать? Меняем файл в компоненте тегов. А при обновлении он успешно затирается. Поэтому и создан я - компонент Joomla Safe Update.</p>
    <h2>Алгоритм, по которому я работаю:</h2>
    <ul>
        <li>Перед обновлением, я скачиваю текущую версию исходного дистрибутива Joomla</li>
        <li>Затем я сравниваю все файлы из исходного дистрибутива со всеми файлами в текущей системе</li>
        <li>Если есть различия, я вывожу их на экран и копирую в архив измененный файл</li>
        <li>Затем, я запускаю обновление Joomla</li>
        <li>После того, как Joomla обновилась, я в зависимости от настроек, восстанавливаю те файлы, которые были сохранены, либо опять вывожу на экран названия файлов, которые были изменены и что в них надо поменять</li>
    </ul>
    <p>Обновление Joomla теперь не будет головной болью для Вас. Приятного использования</p>
    <a href="index.php?option=com_safe_update&task=run.compare" class="btn btn-primary">Проверить измененные файлы</a>
</div>